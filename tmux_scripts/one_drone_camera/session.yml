name: simulation
root: ./
pre_window: export UAV_NAME=uav1; export UAV_TYPE=f450; export ODOMETRY_TYPE=rtk; export WORLD_NAME=simulation
startup_window: status
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch gui:=true world_name:=forest
  - cloud: 
      layout: tiled
      panes:
        - waitForOdometry; roslaunch testing_brubotics realsense_cloud.launch
        - waitForOdometry; roslaunch planners_brubotics octomap_mapping.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-ground-truth --enable-rangefinder --enable_realsense_front" #"
        # - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-rplidar"
  - status:
      layout: tiled
      panes:
        - waitForOdometry; roslaunch mrs_uav_status status.launch
  - control:
      layout: tiled
      panes:
        - waitForOdometry; roslaunch controllers_brubotics controllers_brubotics.launch custom_config_se3_brubotics_controller:=custom_configs/gains/se3_brubotics.yaml; roslaunch trackers_brubotics trackers_brubotics.launch custom_config_dergbryan_tracker:=custom_configs/dergbryan_tracker.yaml; roslaunch mrs_uav_general core.launch config_odometry:=custom_configs/odometry.yaml config_motor_params:=custom_configs/motor_params.yaml config_control_manager:=custom_configs/control_manager.yaml config_uav_manager:=custom_configs/uav_manager.yaml 
  - autostart:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        #{ uav1
        - 'waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 0.1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        #}
  - planner:
      layout: tiled
      panes:
        - waitForControl; waitForControl; roslaunch planners_brubotics execute.launch
        - waitForControl; waitForControl; roslaunch planners_brubotics python_interface.launch
  - gazebo_camera_follow:
      layout: tiled
      panes:
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
        - waitForOdometry; ~/.i3/layout_manager.sh layout.json
